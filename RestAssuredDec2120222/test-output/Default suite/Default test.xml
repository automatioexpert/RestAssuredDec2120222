<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-N60QB27" ignored="0" name="Default test" tests="1" failures="1" timestamp="2022-12-21T19:30:30 IST" time="2.959" errors="0">
  <testcase name="extract" time="2.894" classname="hamcrestTest.ExtractResponse">
    <failure type="java.lang.AssertionError" message="expected [true] but found [&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;!-- Google Tag Manager --&amp;gt;
        &amp;lt;script&amp;gt;
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    &amp;apos;gtm.start&amp;apos;: new Date().getTime(),
                    event: &amp;apos;gtm.js&amp;apos;,
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != &amp;apos;dataLayer&amp;apos; ? &amp;apos;&amp;amp;l=&amp;apos; + l : &amp;apos;&amp;apos;
                j.async = true
                j.src = &amp;apos;https://www.googletagmanager.com/gtm.js?id=&amp;apos; + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, &amp;apos;script&amp;apos;, &amp;apos;dataLayer&amp;apos;, &amp;apos;GTM-KB622KF&amp;apos;)
        &amp;lt;/script&amp;gt;
        &amp;lt;!-- End Google Tag Manager --&amp;gt;
        &amp;lt;script src=&amp;quot;https://js.stripe.com/v3/&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;meta charset=&amp;quot;utf-8&amp;quot; /&amp;gt;
        &amp;lt;meta
            name=&amp;quot;viewport&amp;quot;
            content=&amp;quot;width=device-width, initial-scale=1.0, maximum-scale=1.0&amp;quot;
        /&amp;gt;
        &amp;lt;meta
            name=&amp;quot;description&amp;quot;
            content=&amp;quot;A hosted REST-API ready to respond to your AJAX requests&amp;quot;
        /&amp;gt;
        &amp;lt;title&amp;gt;
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        &amp;lt;/title&amp;gt;
        &amp;lt;link
            href=&amp;quot;//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css&amp;quot;
            rel=&amp;quot;stylesheet&amp;quot;
        /&amp;gt;

        &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;/css/app.css&amp;quot; /&amp;gt;
        &amp;lt;script
            type=&amp;quot;text/javascript&amp;quot;
            src=&amp;quot;//m.servedby-buysellads.com/monetization.custom.js&amp;quot;
        &amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div class=&amp;quot;header-content&amp;quot;&amp;gt;
            &amp;lt;header class=&amp;quot;main-header&amp;quot;&amp;gt;
                &amp;lt;section class=&amp;quot;wrap&amp;quot;&amp;gt;
                    &amp;lt;h1 class=&amp;quot;logo&amp;quot;&amp;gt;
                        &amp;lt;a href=&amp;quot;/&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;/img/logo.png&amp;quot; alt=&amp;quot;&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;
                    &amp;lt;/h1&amp;gt;
                &amp;lt;/section&amp;gt;
            &amp;lt;/header&amp;gt;
            &amp;lt;main class=&amp;quot;the-sell&amp;quot;&amp;gt;
                &amp;lt;div class=&amp;quot;wrap&amp;quot;&amp;gt;
                    &amp;lt;h2 class=&amp;quot;tagline&amp;quot;&amp;gt;
                        Test your front-end against a real API
                    &amp;lt;/h2&amp;gt;
                    &amp;lt;section class=&amp;quot;key-sells&amp;quot;&amp;gt;
                        &amp;lt;div class=&amp;quot;sell&amp;quot;&amp;gt;
                            &amp;lt;div class=&amp;quot;v-center&amp;quot;&amp;gt;
                                &amp;lt;h3&amp;gt;Fake data&amp;lt;/h3&amp;gt;
                                &amp;lt;p&amp;gt;
                                    No more tedious sample data creation, we&amp;apos;ve
                                    got it covered.
                                &amp;lt;/p&amp;gt;
                            &amp;lt;/div&amp;gt;
                            &amp;lt;i class=&amp;quot;fa fa-cloud-download&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/div&amp;gt;
                        &amp;lt;div class=&amp;quot;sell&amp;quot;&amp;gt;
                            &amp;lt;div class=&amp;quot;v-center&amp;quot;&amp;gt;
                                &amp;lt;h3&amp;gt;Real responses&amp;lt;/h3&amp;gt;
                                &amp;lt;p&amp;gt;
                                    Develop with real response codes. GET, POST,
                                    PUT &amp;amp;amp; DELETE supported.
                                &amp;lt;/p&amp;gt;
                            &amp;lt;/div&amp;gt;
                            &amp;lt;i class=&amp;quot;fa fa-code&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/div&amp;gt;
                        &amp;lt;div class=&amp;quot;sell&amp;quot;&amp;gt;
                            &amp;lt;div class=&amp;quot;v-center&amp;quot;&amp;gt;
                                &amp;lt;h3&amp;gt;Always-on&amp;lt;/h3&amp;gt;
                                &amp;lt;p&amp;gt;
                                    24/7 &amp;lt;strong&amp;gt;&amp;lt;em&amp;gt;free&amp;lt;/em&amp;gt;&amp;lt;/strong&amp;gt; access
                                    in your development phases. Go nuts.
                                &amp;lt;/p&amp;gt;
                            &amp;lt;/div&amp;gt;
                            &amp;lt;i class=&amp;quot;fa fa-toggle-on&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
                        &amp;lt;/div&amp;gt;
                    &amp;lt;/section&amp;gt;
                    &amp;lt;h2 class=&amp;quot;tagline&amp;quot;&amp;gt;
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    &amp;lt;/h2&amp;gt;
                    &amp;lt;div class=&amp;quot;t-center main-arrow&amp;quot;&amp;gt;
                        &amp;lt;i class=&amp;quot;fa fa-arrow-circle-down&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
                    &amp;lt;/div&amp;gt;
                    &amp;lt;script
                        async
                        type=&amp;quot;text/javascript&amp;quot;
                        src=&amp;quot;//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&amp;amp;placement=reqresin&amp;quot;
                        id=&amp;quot;_carbonads_js&amp;quot;
                    &amp;gt;&amp;lt;/script&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/main&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;&amp;lt;div class=&amp;quot;home-content&amp;quot;&amp;gt;
    &amp;lt;div class=&amp;quot;wrap&amp;quot;&amp;gt;
        &amp;lt;h2 class=&amp;quot;t-center heading&amp;quot;&amp;gt;Give it a try&amp;lt;/h2&amp;gt;
        &amp;lt;div class=&amp;quot;t-center&amp;quot;&amp;gt;
            &amp;lt;button style=&amp;quot;float: none&amp;quot;&amp;gt;
                &amp;lt;a style=&amp;quot;text-decoration: none&amp;quot; href=&amp;quot;#support-heading&amp;quot;
                    &amp;gt;Support ReqRes&amp;lt;/a
                &amp;gt;
            &amp;lt;/button&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;hr class=&amp;quot;dark&amp;quot; /&amp;gt;
        &amp;lt;section class=&amp;quot;console try-api-links&amp;quot; id=&amp;quot;console&amp;quot;&amp;gt;
            &amp;lt;div class=&amp;quot;endpoints&amp;quot; data-key=&amp;quot;endpoints&amp;quot;&amp;gt;
                &amp;lt;ul&amp;gt;
                    &amp;lt;li
                        data-id=&amp;quot;users&amp;quot;
                        data-key=&amp;quot;endpoint&amp;quot;
                        data-http=&amp;quot;get&amp;quot;
                        class=&amp;quot;active&amp;quot;
                    &amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; List users &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li
                        data-id=&amp;quot;users-single&amp;quot;
                        data-key=&amp;quot;endpoint&amp;quot;
                        data-http=&amp;quot;get&amp;quot;
                    &amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; Single user &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li
                        data-id=&amp;quot;users-single-not-found&amp;quot;
                        data-key=&amp;quot;endpoint&amp;quot;
                        data-http=&amp;quot;get&amp;quot;
                    &amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; Single user not found &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li data-id=&amp;quot;unknown&amp;quot; data-key=&amp;quot;endpoint&amp;quot; data-http=&amp;quot;get&amp;quot;&amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; List &amp;amp;lt;resource&amp;amp;gt; &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li
                        data-id=&amp;quot;unknown-single&amp;quot;
                        data-key=&amp;quot;endpoint&amp;quot;
                        data-http=&amp;quot;get&amp;quot;
                    &amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; Single &amp;amp;lt;resource&amp;amp;gt; &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li
                        data-id=&amp;quot;unknown-single-not-found&amp;quot;
                        data-key=&amp;quot;endpoint&amp;quot;
                        data-http=&amp;quot;get&amp;quot;
                    &amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt;
                            Single &amp;amp;lt;resource&amp;amp;gt; not found
                        &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li data-id=&amp;quot;post&amp;quot; data-key=&amp;quot;endpoint&amp;quot; data-http=&amp;quot;post&amp;quot;&amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; Create &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li data-id=&amp;quot;put&amp;quot; data-key=&amp;quot;endpoint&amp;quot; data-http=&amp;quot;put&amp;quot;&amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; Update &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li data-id=&amp;quot;patch&amp;quot; data-key=&amp;quot;endpoint&amp;quot; data-http=&amp;quot;patch&amp;quot;&amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; Update &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li data-id=&amp;quot;delete&amp;quot; data-key=&amp;quot;endpoint&amp;quot; data-http=&amp;quot;delete&amp;quot;&amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; Delete &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li
                        data-id=&amp;quot;register-successful&amp;quot;
                        data-key=&amp;quot;endpoint&amp;quot;
                        data-http=&amp;quot;post&amp;quot;
                    &amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; Register - successful &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li
                        data-id=&amp;quot;register-unsuccessful&amp;quot;
                        data-key=&amp;quot;endpoint&amp;quot;
                        data-http=&amp;quot;post&amp;quot;
                    &amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; Register - unsuccessful &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li
                        data-id=&amp;quot;login-successful&amp;quot;
                        data-key=&amp;quot;endpoint&amp;quot;
                        data-http=&amp;quot;post&amp;quot;
                    &amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; Login - successful &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li
                        data-id=&amp;quot;login-unsuccessful&amp;quot;
                        data-key=&amp;quot;endpoint&amp;quot;
                        data-http=&amp;quot;post&amp;quot;
                    &amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; Login - unsuccessful &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                    &amp;lt;li data-id=&amp;quot;delay&amp;quot; data-key=&amp;quot;endpoint&amp;quot; data-http=&amp;quot;get&amp;quot;&amp;gt;
                        &amp;lt;a data-key=&amp;quot;try-link&amp;quot;&amp;gt; Delayed response &amp;lt;/a&amp;gt;
                    &amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;!--
			--&amp;gt;
            &amp;lt;div class=&amp;quot;output&amp;quot;&amp;gt;
                &amp;lt;div class=&amp;quot;request&amp;quot;&amp;gt;
                    &amp;lt;p class=&amp;quot;request-title&amp;quot;&amp;gt;
                        &amp;lt;strong
                            &amp;gt;Request &amp;lt;i class=&amp;quot;fa fa-arrow-circle-up&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
                            &amp;lt;a
                                class=&amp;quot;link try-link&amp;quot;
                                data-key=&amp;quot;request-output-link&amp;quot;
                            &amp;gt;
                                &amp;lt;span class=&amp;quot;url&amp;quot; data-key=&amp;quot;url&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;
                            &amp;lt;/a&amp;gt;
                        &amp;lt;/strong&amp;gt;
                    &amp;lt;/p&amp;gt;
                    &amp;lt;pre data-key=&amp;quot;output-request&amp;quot;&amp;gt;&amp;lt;/pre&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;!--
				--&amp;gt;
                &amp;lt;div class=&amp;quot;response&amp;quot;&amp;gt;
                    &amp;lt;p class=&amp;quot;response-title&amp;quot;&amp;gt;
                        &amp;lt;strong
                            &amp;gt;Response &amp;lt;i class=&amp;quot;fa fa-arrow-circle-down&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
                            &amp;lt;span
                                class=&amp;quot;response-code&amp;quot;
                                data-key=&amp;quot;response-code&amp;quot;
                            &amp;gt;&amp;lt;/span
                        &amp;gt;&amp;lt;/strong&amp;gt;
                    &amp;lt;/p&amp;gt;
                    &amp;lt;div data-key=&amp;quot;spinner&amp;quot; class=&amp;quot;spinner&amp;quot; hidden&amp;gt;
                        &amp;lt;div class=&amp;quot;cube1&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
                        &amp;lt;div class=&amp;quot;cube2&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
                    &amp;lt;/div&amp;gt;
                    &amp;lt;pre data-key=&amp;quot;output-response&amp;quot;&amp;gt;&amp;lt;/pre&amp;gt;
                &amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/section&amp;gt;

        &amp;lt;hr class=&amp;quot;dark&amp;quot; /&amp;gt;

        &amp;lt;style&amp;gt;
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, &amp;apos;Segoe UI&amp;apos;,
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, &amp;apos;Helvetica Neue&amp;apos;,
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        &amp;lt;/style&amp;gt;
        &amp;lt;div id=&amp;quot;impeccable-js&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;

        &amp;lt;div&amp;gt;
            &amp;lt;iframe
                src=&amp;quot;https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&amp;amp;fontsize=14&amp;amp;theme=dark&amp;amp;view=preview&amp;quot;
                style=&amp;quot;
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                &amp;quot;
                title=&amp;quot;polished-butterfly-j17lt&amp;quot;
                allow=&amp;quot;accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking&amp;quot;
                sandbox=&amp;quot;allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts&amp;quot;
            &amp;gt;&amp;lt;/iframe&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;h2 class=&amp;quot;t-center heading&amp;quot;&amp;gt;It&amp;amp;rsquo;s all in the details&amp;lt;/h2&amp;gt;
        &amp;lt;hr class=&amp;quot;dark&amp;quot; /&amp;gt;
        &amp;lt;section class=&amp;quot;technical-bits&amp;quot; id=&amp;quot;technical-bits&amp;quot;&amp;gt;
            &amp;lt;ul class=&amp;quot;iconed&amp;quot;&amp;gt;
                &amp;lt;li&amp;gt;
                    &amp;lt;i class=&amp;quot;fa fa-cloud&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
                    &amp;lt;p&amp;gt;
                        &amp;lt;strong
                            &amp;gt;Hosted on
                            &amp;lt;a href=&amp;quot;https://www.heroku.com/&amp;quot;&amp;gt;Heroku&amp;lt;/a&amp;gt;&amp;lt;/strong
                        &amp;gt;
                    &amp;lt;/p&amp;gt;
                    &amp;lt;p&amp;gt;
                        Which means 99.99% Uptime SLA.&amp;lt;br /&amp;gt;All you need is the
                        base URL, and you&amp;apos;re away: &amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;span
                            class=&amp;quot;code&amp;quot;
                            &amp;gt;https://reqres.in/api/&amp;lt;/span
                        &amp;gt;&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    &amp;lt;/p&amp;gt;
                &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;
                    &amp;lt;i class=&amp;quot;fa fa-file-code-o&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
                    &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Language agnostic&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;
                    &amp;lt;p&amp;gt;
                        A generic API that conforms to REST principles and
                        accepts a content type of &amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;span class=&amp;quot;code&amp;quot;
                            &amp;gt;application/json&amp;lt;/span
                        &amp;gt;&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;Any endpoint that contains
                        &amp;quot;&amp;amp;lt;resource&amp;amp;gt;&amp;quot; can be substituted with anything you
                        supply, ie. &amp;quot;products&amp;quot;, &amp;quot;accounts&amp;quot;, etc..the API will
                        just respond with various Pantone colours.
                    &amp;lt;/p&amp;gt;
                &amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/section&amp;gt;

        &amp;lt;h2 class=&amp;quot;t-center heading&amp;quot;&amp;gt;Getting started&amp;lt;/h2&amp;gt;
        &amp;lt;hr class=&amp;quot;dark&amp;quot; /&amp;gt;
        &amp;lt;section class=&amp;quot;getting-started t-center&amp;quot; id=&amp;quot;getting-started&amp;quot;&amp;gt;
            &amp;lt;i class=&amp;quot;fa fa-html5&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
            &amp;lt;div class=&amp;quot;swagger-link&amp;quot;&amp;gt;
                &amp;lt;p&amp;gt;Check out the Swagger doc:&amp;lt;/p&amp;gt;
                &amp;lt;a href=&amp;quot;/api-docs&amp;quot;&amp;gt;
                    &amp;lt;img
                        src=&amp;quot;/img/swagger-logo-horizontal.jpeg&amp;quot;
                        alt=&amp;quot;Swagger logo&amp;quot;
                    /&amp;gt;
                &amp;lt;/a&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div class=&amp;quot;tab&amp;quot;&amp;gt;
                &amp;lt;p class=&amp;quot;tab-title&amp;quot;&amp;gt;jQuery&amp;lt;/p&amp;gt;
                &amp;lt;p&amp;gt;If you, for example, want to create a fake user:&amp;lt;/p&amp;gt;
                &amp;lt;pre&amp;gt;$.ajax({
    url: &amp;quot;https://reqres.in/api/users&amp;quot;,
    type: &amp;quot;POST&amp;quot;,
    data: {
        name: &amp;quot;paul rudd&amp;quot;,
        movies: [&amp;quot;I Love You Man&amp;quot;, &amp;quot;Role Models&amp;quot;]
    },
    success: function(response){
        console.log(response);
    }
});
				&amp;lt;/pre
                &amp;gt;
                &amp;lt;p&amp;gt;For which the response to this request will be...&amp;lt;/p&amp;gt;
                &amp;lt;pre&amp;gt;{
    &amp;quot;name&amp;quot;:&amp;quot;paul rudd&amp;quot;,
    &amp;quot;movies[]&amp;quot;:[
        &amp;quot;I Love You Man&amp;quot;,
        &amp;quot;Role Models&amp;quot;
    ],
    &amp;quot;id&amp;quot;:&amp;quot;243&amp;quot;,
    &amp;quot;createdAt&amp;quot;:&amp;quot;2014-10-18T12:09:05.255Z&amp;quot;
}
				&amp;lt;/pre
                &amp;gt;
                &amp;lt;p&amp;gt;
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    &amp;lt;span class=&amp;quot;code&amp;quot;&amp;gt;id&amp;lt;/span&amp;gt; &amp;amp;amp;
                    &amp;lt;span class=&amp;quot;code&amp;quot;&amp;gt;createdAt&amp;lt;/span&amp;gt; key for our use.
                &amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;!--
			--&amp;gt;
            &amp;lt;div class=&amp;quot;tab&amp;quot;&amp;gt;
                &amp;lt;p class=&amp;quot;tab-title&amp;quot;&amp;gt;Native JavaScript&amp;lt;/p&amp;gt;
                &amp;lt;p&amp;gt;
                    If you&amp;apos;ve already got your own application entities, ie.
                    &amp;quot;products&amp;quot;, you can send them in the endpoint URL, like so:
                &amp;lt;/p&amp;gt;
                &amp;lt;pre&amp;gt;var xhr = new XMLHttpRequest();
xhr.open(&amp;quot;GET&amp;quot;, &amp;quot;https://reqres.in/api/products/3&amp;quot;, true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				&amp;lt;/pre
                &amp;gt;
                &amp;lt;p&amp;gt;
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                &amp;lt;/p&amp;gt;
                &amp;lt;pre&amp;gt;{
    &amp;quot;data&amp;quot;:{
        &amp;quot;id&amp;quot;:3,
        &amp;quot;name&amp;quot;:&amp;quot;true red&amp;quot;,
        &amp;quot;year&amp;quot;:2002,
        &amp;quot;pantone_value&amp;quot;:&amp;quot;19-1664&amp;quot;
    }
}
				&amp;lt;/pre
                &amp;gt;
                &amp;lt;p&amp;gt;
                    It&amp;apos;s entirely possible to get sample data into your
                    interface in seconds!
                &amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/section&amp;gt;

        &amp;lt;h2 class=&amp;quot;t-center heading&amp;quot;&amp;gt;Still don&amp;apos;t really get it...&amp;lt;/h2&amp;gt;
        &amp;lt;hr class=&amp;quot;dark&amp;quot; /&amp;gt;
        &amp;lt;section class=&amp;quot;technical-bits&amp;quot; id=&amp;quot;technical-bits&amp;quot;&amp;gt;
            &amp;lt;ul class=&amp;quot;iconed&amp;quot;&amp;gt;
                &amp;lt;li&amp;gt;
                    &amp;lt;i class=&amp;quot;fa fa-rocket&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
                    &amp;lt;p&amp;gt;
                        &amp;lt;strong&amp;gt;Reqres is a &amp;lt;em&amp;gt;real&amp;lt;/em&amp;gt; API&amp;lt;/strong&amp;gt;
                    &amp;lt;/p&amp;gt;
                    &amp;lt;p&amp;gt;
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. &amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;A common front-end scenario that&amp;apos;s
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending &amp;lt;br /&amp;gt;&amp;lt;span
                            class=&amp;quot;code&amp;quot;
                            &amp;gt;?delay=&amp;amp;lt;a number of seconds&amp;amp;gt;&amp;lt;/span
                        &amp;gt;
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp;amp;amp; SVGs at the ready!
                    &amp;lt;/p&amp;gt;
                &amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;
                    &amp;lt;i class=&amp;quot;fa fa-bolt&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
                    &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Technical demos and tutorials&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;
                    &amp;lt;p&amp;gt;
                        If you&amp;apos;re trying to demonstrate a front-end
                        (JavaScript-based) concept, you don&amp;apos;t really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;
                        You can just write your HTML, CSS &amp;amp;amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    &amp;lt;/p&amp;gt;
                &amp;lt;/li&amp;gt;

                &amp;lt;li&amp;gt;
                    &amp;lt;i class=&amp;quot;fa fa-file-code-o&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
                    &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Rapid prototyping of interfaces&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;
                    &amp;lt;p&amp;gt;
                        When prototyping a new interface, you just want an API
                        &amp;lt;em&amp;gt;there&amp;lt;/em&amp;gt;, with minimal setup effort involved.
                        Normally, I&amp;apos;d point people, who aren&amp;apos;t too familiar with
                        backend programming, to
                        &amp;lt;a href=&amp;quot;http://sailsjs.org&amp;quot;&amp;gt;Sailsjs&amp;lt;/a&amp;gt; which can
                        auto-generate a REST-API for you from the command
                        line.&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    &amp;lt;/p&amp;gt;
                &amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/section&amp;gt;

        &amp;lt;h2 class=&amp;quot;t-center heading&amp;quot;&amp;gt;Peace of mind&amp;lt;/h2&amp;gt;
        &amp;lt;hr class=&amp;quot;dark&amp;quot; /&amp;gt;
        &amp;lt;section class=&amp;quot;peace-of-mind&amp;quot; id=&amp;quot;peace-of-mind&amp;quot;&amp;gt;
            &amp;lt;i class=&amp;quot;fa fa-lock&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
            &amp;lt;p&amp;gt;
                It might seem &amp;lt;strong&amp;gt;pretty weird&amp;lt;/strong&amp;gt; to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                &amp;lt;strong&amp;gt;does not store any of your data&amp;lt;/strong&amp;gt; at all. Once
                you send it to us, we just send it straight back...and then it&amp;apos;s
                gone!
            &amp;lt;/p&amp;gt;
        &amp;lt;/section&amp;gt;

        &amp;lt;h2 id=&amp;quot;support-heading&amp;quot; class=&amp;quot;t-center heading&amp;quot;&amp;gt;Support&amp;lt;/h2&amp;gt;
        &amp;lt;hr class=&amp;quot;dark&amp;quot; /&amp;gt;
        &amp;lt;section class=&amp;quot;pro support&amp;quot; id=&amp;quot;support&amp;quot;&amp;gt;
            &amp;lt;p class=&amp;quot;breathe&amp;quot;&amp;gt;
                ReqRes serves nearly
                &amp;lt;strong&amp;gt;half a billion requests each month&amp;lt;/strong&amp;gt;, and is
                provided free-of-charge.
            &amp;lt;/p&amp;gt;
            &amp;lt;p class=&amp;quot;breathe&amp;quot;&amp;gt;
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            &amp;lt;/p&amp;gt;

            &amp;lt;form class=&amp;quot;breathe&amp;quot; action=&amp;quot;#&amp;quot; id=&amp;quot;supportForm&amp;quot;&amp;gt;
                &amp;lt;div&amp;gt;
                    &amp;lt;input
                        type=&amp;quot;radio&amp;quot;
                        id=&amp;quot;supportOneTime&amp;quot;
                        name=&amp;quot;support&amp;quot;
                        value=&amp;quot;supportOneTime&amp;quot;
                        checked
                    /&amp;gt;
                    &amp;lt;input
                        type=&amp;quot;number&amp;quot;
                        placeholder=&amp;quot;$10&amp;quot;
                        name=&amp;quot;oneTimeAmount&amp;quot;
                    /&amp;gt;
                    &amp;lt;label for=&amp;quot;supportOneTime&amp;quot;&amp;gt;One-time payment ($)&amp;lt;/label&amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;div&amp;gt;
                    &amp;lt;input
                        type=&amp;quot;radio&amp;quot;
                        id=&amp;quot;supportRecurring&amp;quot;
                        name=&amp;quot;support&amp;quot;
                        value=&amp;quot;supportRecurring&amp;quot;
                    /&amp;gt;
                    &amp;lt;label for=&amp;quot;supportRecurring&amp;quot;
                        &amp;gt;Monthly support ($5/month)&amp;lt;/label
                    &amp;gt;
                &amp;lt;/div&amp;gt;
                &amp;lt;button&amp;gt;Support ReqRes&amp;lt;/button&amp;gt;
            &amp;lt;/form&amp;gt;

            &amp;lt;p class=&amp;quot;tiny&amp;quot;&amp;gt;
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            &amp;lt;/p&amp;gt;
        &amp;lt;/section&amp;gt;

        &amp;lt;h2 class=&amp;quot;t-center heading&amp;quot;&amp;gt;Advertising&amp;lt;/h2&amp;gt;
        &amp;lt;hr class=&amp;quot;dark&amp;quot; /&amp;gt;
        &amp;lt;section class=&amp;quot;pro&amp;quot; id=&amp;quot;pro&amp;quot;&amp;gt;
            &amp;lt;p&amp;gt;
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                &amp;lt;a
                    href=&amp;quot;https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0&amp;quot;
                    &amp;gt;info [pdf]&amp;lt;/a
                &amp;gt;
                on the ads. &amp;lt;a href=&amp;quot;/cdn-cgi/l/email-protection#dcb4b9b0b0b39cbeb9b2b4b3abb8b0b9f2b5b1&amp;quot;&amp;gt;Contact&amp;lt;/a&amp;gt; for
                pricing and questions.
            &amp;lt;/p&amp;gt;
        &amp;lt;/section&amp;gt;

        &amp;lt;h2 class=&amp;quot;t-center heading&amp;quot;&amp;gt;Looking for pro features?&amp;lt;/h2&amp;gt;
        &amp;lt;hr class=&amp;quot;dark&amp;quot; /&amp;gt;
        &amp;lt;section class=&amp;quot;pro&amp;quot; id=&amp;quot;pro&amp;quot;&amp;gt;
            &amp;lt;button id=&amp;quot;trigger-pro&amp;quot; class=&amp;quot;large&amp;quot;&amp;gt;Upgrade&amp;lt;/button&amp;gt;

            &amp;lt;div id=&amp;quot;pro-form&amp;quot; class=&amp;quot;pro-form&amp;quot;&amp;gt;
                &amp;lt;h3&amp;gt;
                    &amp;lt;strong&amp;gt;Ace.&amp;lt;/strong&amp;gt; Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                &amp;lt;/h3&amp;gt;
                &amp;lt;!-- Begin Mailchimp Signup Form --&amp;gt;
                &amp;lt;link
                    href=&amp;quot;//cdn-images.mailchimp.com/embedcode/classic-10_7.css&amp;quot;
                    rel=&amp;quot;stylesheet&amp;quot;
                    type=&amp;quot;text/css&amp;quot;
                /&amp;gt;
                &amp;lt;div id=&amp;quot;mc_embed_signup&amp;quot;&amp;gt;
                    &amp;lt;form
                        action=&amp;quot;https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;amp;amp;id=544f278469&amp;quot;
                        method=&amp;quot;post&amp;quot;
                        id=&amp;quot;mc-embedded-subscribe-form&amp;quot;
                        name=&amp;quot;mc-embedded-subscribe-form&amp;quot;
                        class=&amp;quot;validate&amp;quot;
                        target=&amp;quot;_blank&amp;quot;
                        novalidate
                    &amp;gt;
                        &amp;lt;div id=&amp;quot;mc_embed_signup_scroll&amp;quot;&amp;gt;
                            &amp;lt;div class=&amp;quot;mc-field-group&amp;quot;&amp;gt;
                                &amp;lt;label for=&amp;quot;mce-EMAIL&amp;quot;&amp;gt;Email Address &amp;lt;/label&amp;gt;
                                &amp;lt;input
                                    type=&amp;quot;email&amp;quot;
                                    value=&amp;quot;&amp;quot;
                                    name=&amp;quot;EMAIL&amp;quot;
                                    class=&amp;quot;required email&amp;quot;
                                    id=&amp;quot;mce-EMAIL&amp;quot;
                                /&amp;gt;
                            &amp;lt;/div&amp;gt;
                            &amp;lt;div id=&amp;quot;mce-responses&amp;quot; class=&amp;quot;clear&amp;quot;&amp;gt;
                                &amp;lt;div
                                    class=&amp;quot;response&amp;quot;
                                    id=&amp;quot;mce-error-response&amp;quot;
                                    style=&amp;quot;display: none&amp;quot;
                                &amp;gt;&amp;lt;/div&amp;gt;
                                &amp;lt;div
                                    class=&amp;quot;response&amp;quot;
                                    id=&amp;quot;mce-success-response&amp;quot;
                                    style=&amp;quot;display: none&amp;quot;
                                &amp;gt;&amp;lt;/div&amp;gt;
                            &amp;lt;/div&amp;gt;
                            &amp;lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&amp;gt;
                            &amp;lt;div
                                style=&amp;quot;position: absolute; left: -5000px&amp;quot;
                                aria-hidden=&amp;quot;true&amp;quot;
                            &amp;gt;
                                &amp;lt;input
                                    type=&amp;quot;text&amp;quot;
                                    name=&amp;quot;b_8c58165749318545a89cd1b21_544f278469&amp;quot;
                                    tabindex=&amp;quot;-1&amp;quot;
                                    value=&amp;quot;&amp;quot;
                                /&amp;gt;
                            &amp;lt;/div&amp;gt;
                            &amp;lt;div class=&amp;quot;clear&amp;quot;&amp;gt;
                                &amp;lt;input
                                    type=&amp;quot;submit&amp;quot;
                                    value=&amp;quot;Subscribe&amp;quot;
                                    name=&amp;quot;subscribe&amp;quot;
                                    id=&amp;quot;mc-embedded-subscribe&amp;quot;
                                    class=&amp;quot;button&amp;quot;
                                /&amp;gt;
                            &amp;lt;/div&amp;gt;
                        &amp;lt;/div&amp;gt;
                    &amp;lt;/form&amp;gt;
                &amp;lt;/div&amp;gt;

                &amp;lt;!--End mc_embed_signup--&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/section&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
        &amp;lt;footer&amp;gt;
            &amp;lt;div class=&amp;quot;wrap&amp;quot;&amp;gt;
                &amp;lt;hr class=&amp;quot;dark&amp;quot; /&amp;gt;
                &amp;lt;p class=&amp;quot;t-center&amp;quot;&amp;gt;
                    Made for developers and designers by
                    &amp;lt;a href=&amp;quot;https://benhowdle.im&amp;quot;&amp;gt;Ben Howdle&amp;lt;/a&amp;gt;
                &amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/footer&amp;gt;
        &amp;lt;script data-cfasync=&amp;quot;false&amp;quot; src=&amp;quot;/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script src=&amp;quot;/js/app.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;!-- Global site tag (gtag.js) - Google Analytics --&amp;gt;
        &amp;lt;script
            async
            src=&amp;quot;https://www.googletagmanager.com/gtag/js?id=UA-174008107-1&amp;quot;
        &amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script&amp;gt;
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag(&amp;apos;js&amp;apos;, new Date())

            gtag(&amp;apos;config&amp;apos;, &amp;apos;UA-174008107-1&amp;apos;)
        &amp;lt;/script&amp;gt;
        &amp;lt;script&amp;gt;
            ;(function (i, s, o, g, r, a, m) {
                i[&amp;apos;GoogleAnalyticsObject&amp;apos;] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                &amp;apos;script&amp;apos;,
                &amp;apos;//www.google-analytics.com/analytics.js&amp;apos;,
                &amp;apos;ga&amp;apos;
            )

            ga(&amp;apos;create&amp;apos;, &amp;apos;UA-55888877-1&amp;apos;, &amp;apos;auto&amp;apos;)
            ga(&amp;apos;send&amp;apos;, &amp;apos;pageview&amp;apos;)
        &amp;lt;/script&amp;gt;
        &amp;lt;script&amp;gt;
            ;(function () {
                if (typeof _bsa !== &amp;apos;undefined&amp;apos; &amp;amp;&amp;amp; _bsa) {
                    _bsa.init(
                        &amp;apos;custom&amp;apos;,
                        &amp;apos;CEBIP53J&amp;apos;,
                        &amp;apos;placement:reqresin-sponsor&amp;apos;,
                        {
                            target: &amp;apos;#impeccable-js&amp;apos;,
                            template: `
        &amp;lt;a href=&amp;quot;##link##&amp;quot; rel=&amp;quot;sponsored noopener&amp;quot; target=&amp;quot;_blank&amp;quot; title=&amp;quot;##company## — ##tagline##&amp;quot;&amp;gt;
        &amp;lt;img src=&amp;quot;##logo##&amp;quot; style=&amp;quot;background-color: ##backgroundColor##&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;sponsor-description&amp;quot;&amp;gt;##description##&amp;lt;/div&amp;gt;
        &amp;lt;div class=&amp;quot;sponsor-cta&amp;quot; style=&amp;quot;background-color: ##backgroundColor##; color: ##textColor##&amp;quot;&amp;gt;##callToAction##&amp;lt;/div&amp;gt;
        &amp;lt;/a&amp;gt;
        `,
                        }
                    )
                }
            })()
        &amp;lt;/script&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#dcb4b9b0b0b39cbeb9b2b4b3abb8b0b9f2b5b1">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>
]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:617)
at hamcrestTest.ExtractResponse.extract(ExtractResponse.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- extract -->
</testsuite> <!-- Default test -->
